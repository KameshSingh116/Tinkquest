{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\tinkerquest\\\\Tinkquest\\\\frontend\\\\src\\\\pages\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Grid, Paper, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Card, CardContent } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const [marketData, setMarketData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [stockData, setStockData] = useState(null);\n  const [portfolioSummary, setPortfolioSummary] = useState({\n    totalValue: 100000,\n    dailyChange: 1500,\n    dailyChangePercent: 1.5,\n    positions: [{\n      symbol: 'AAPL',\n      quantity: 100,\n      currentPrice: 150.25,\n      totalValue: 15025,\n      dailyChange: 125\n    }, {\n      symbol: 'MSFT',\n      quantity: 50,\n      currentPrice: 250.75,\n      totalValue: 12537.5,\n      dailyChange: 87.5\n    }]\n  });\n  const [recentTrades, setRecentTrades] = useState([{\n    id: '1',\n    symbol: 'AAPL',\n    type: 'buy',\n    quantity: 10,\n    price: 149.50,\n    timestamp: '2024-03-20T10:30:00Z'\n  }, {\n    id: '2',\n    symbol: 'MSFT',\n    type: 'sell',\n    quantity: 5,\n    price: 251.25,\n    timestamp: '2024-03-20T11:15:00Z'\n  }]);\n  useEffect(() => {\n    const fetchMarketData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/market-data/AAPL');\n        setMarketData(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch market data');\n        setLoading(false);\n      }\n    };\n    fetchMarketData();\n  }, []);\n  useEffect(() => {\n    // Fetch stock data\n    fetch('http://localhost:5000/api/stock/AAPL').then(response => response.json()).then(data => {\n      const chartData = {\n        labels: data.dates,\n        datasets: [{\n          label: 'AAPL Price',\n          data: data.prices,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      };\n      setStockData(chartData);\n    }).catch(error => console.error('Error fetching stock data:', error));\n  }, []);\n  const chartData = {\n    labels: (marketData === null || marketData === void 0 ? void 0 : marketData.dates) || [],\n    datasets: [{\n      label: 'Stock Price',\n      data: (marketData === null || marketData === void 0 ? void 0 : marketData.prices) || [],\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'AAPL Stock Price'\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Portfolio Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textSecondary\",\n                    gutterBottom: true,\n                    children: \"Total Value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h5\",\n                    children: [\"$\", portfolioSummary.totalValue.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    color: portfolioSummary.dailyChange >= 0 ? 'success.main' : 'error.main',\n                    variant: \"body2\",\n                    children: [portfolioSummary.dailyChange >= 0 ? '+' : '', \"$\", portfolioSummary.dailyChange.toLocaleString(), \"(\", portfolioSummary.dailyChangePercent.toFixed(2), \"%)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), portfolioSummary.positions.map(position => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: position.symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textSecondary\",\n                    children: [position.quantity, \" shares\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: [\"$\", position.totalValue.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    color: position.dailyChange >= 0 ? 'success.main' : 'error.main',\n                    variant: \"body2\",\n                    children: [position.dailyChange >= 0 ? '+' : '', \"$\", position.dailyChange.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this)\n            }, position.symbol, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: stockData && /*#__PURE__*/_jsxDEV(Line, {\n            options: chartOptions,\n            data: stockData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Recent Trades\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Symbol\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: recentTrades.map(trade => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: trade.symbol\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      color: trade.type === 'buy' ? 'success.main' : 'error.main',\n                      children: trade.type.toUpperCase()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: trade.quantity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: [\"$\", trade.price.toFixed(2)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this)]\n                }, trade.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Qtdt+2g3ZSmkEAGqL0R7tPBQPZg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Box","Grid","Paper","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Card","CardContent","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","axios","jsxDEV","_jsxDEV","register","Dashboard","_s","marketData","setMarketData","loading","setLoading","error","setError","stockData","setStockData","portfolioSummary","setPortfolioSummary","totalValue","dailyChange","dailyChangePercent","positions","symbol","quantity","currentPrice","recentTrades","setRecentTrades","id","type","price","timestamp","fetchMarketData","response","get","data","err","fetch","then","json","chartData","labels","dates","datasets","label","prices","borderColor","tension","catch","console","chartOptions","responsive","plugins","legend","position","title","display","text","children","fileName","_jsxFileName","lineNumber","columnNumber","color","sx","flexGrow","p","container","spacing","item","xs","variant","gutterBottom","toLocaleString","toFixed","map","md","options","size","align","trade","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/lenovo/Desktop/tinkerquest/Tinkquest/frontend/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Box, Grid, Paper, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Card, CardContent, LinearProgress } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport axios from 'axios';\nimport { MarketData } from '../types';\n\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\ninterface PortfolioSummary {\n  totalValue: number;\n  dailyChange: number;\n  dailyChangePercent: number;\n  positions: {\n    symbol: string;\n    quantity: number;\n    currentPrice: number;\n    totalValue: number;\n    dailyChange: number;\n  }[];\n}\n\ninterface RecentTrade {\n  id: string;\n  symbol: string;\n  type: 'buy' | 'sell';\n  quantity: number;\n  price: number;\n  timestamp: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const [marketData, setMarketData] = useState<MarketData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [stockData, setStockData] = useState<any>(null);\n  const [portfolioSummary, setPortfolioSummary] = useState<PortfolioSummary>({\n    totalValue: 100000,\n    dailyChange: 1500,\n    dailyChangePercent: 1.5,\n    positions: [\n      {\n        symbol: 'AAPL',\n        quantity: 100,\n        currentPrice: 150.25,\n        totalValue: 15025,\n        dailyChange: 125\n      },\n      {\n        symbol: 'MSFT',\n        quantity: 50,\n        currentPrice: 250.75,\n        totalValue: 12537.5,\n        dailyChange: 87.5\n      }\n    ]\n  });\n  const [recentTrades, setRecentTrades] = useState<RecentTrade[]>([\n    {\n      id: '1',\n      symbol: 'AAPL',\n      type: 'buy',\n      quantity: 10,\n      price: 149.50,\n      timestamp: '2024-03-20T10:30:00Z'\n    },\n    {\n      id: '2',\n      symbol: 'MSFT',\n      type: 'sell',\n      quantity: 5,\n      price: 251.25,\n      timestamp: '2024-03-20T11:15:00Z'\n    }\n  ]);\n\n  useEffect(() => {\n    const fetchMarketData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/market-data/AAPL');\n        setMarketData(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch market data');\n        setLoading(false);\n      }\n    };\n\n    fetchMarketData();\n  }, []);\n\n  useEffect(() => {\n    // Fetch stock data\n    fetch('http://localhost:5000/api/stock/AAPL')\n      .then(response => response.json())\n      .then(data => {\n        const chartData = {\n          labels: data.dates,\n          datasets: [\n            {\n              label: 'AAPL Price',\n              data: data.prices,\n              borderColor: 'rgb(75, 192, 192)',\n              tension: 0.1\n            }\n          ]\n        };\n        setStockData(chartData);\n      })\n      .catch(error => console.error('Error fetching stock data:', error));\n  }, []);\n\n  const chartData = {\n    labels: marketData?.dates || [],\n    datasets: [\n      {\n        label: 'Stock Price',\n        data: marketData?.prices || [],\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1,\n      },\n    ],\n  };\n\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' as const,\n      },\n      title: {\n        display: true,\n        text: 'AAPL Stock Price',\n      },\n    },\n  };\n\n  if (loading) {\n    return <Typography>Loading...</Typography>;\n  }\n\n  if (error) {\n    return <Typography color=\"error\">{error}</Typography>;\n  }\n\n  return (\n    <Box sx={{ flexGrow: 1, p: 3 }}>\n      <Grid container spacing={3}>\n        {/* Portfolio Summary */}\n        <Grid item xs={12}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Portfolio Summary\n            </Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={4}>\n                <Card>\n                  <CardContent>\n                    <Typography color=\"textSecondary\" gutterBottom>\n                      Total Value\n                    </Typography>\n                    <Typography variant=\"h5\">\n                      ${portfolioSummary.totalValue.toLocaleString()}\n                    </Typography>\n                    <Typography \n                      color={portfolioSummary.dailyChange >= 0 ? 'success.main' : 'error.main'}\n                      variant=\"body2\"\n                    >\n                      {portfolioSummary.dailyChange >= 0 ? '+' : ''}\n                      ${portfolioSummary.dailyChange.toLocaleString()} \n                      ({portfolioSummary.dailyChangePercent.toFixed(2)}%)\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              {portfolioSummary.positions.map((position) => (\n                <Grid item xs={4} key={position.symbol}>\n                  <Card>\n                    <CardContent>\n                      <Typography variant=\"h6\">{position.symbol}</Typography>\n                      <Typography color=\"textSecondary\">\n                        {position.quantity} shares\n                      </Typography>\n                      <Typography variant=\"h6\">\n                        ${position.totalValue.toLocaleString()}\n                      </Typography>\n                      <Typography \n                        color={position.dailyChange >= 0 ? 'success.main' : 'error.main'}\n                        variant=\"body2\"\n                      >\n                        {position.dailyChange >= 0 ? '+' : ''}\n                        ${position.dailyChange.toLocaleString()}\n                      </Typography>\n                    </CardContent>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Paper>\n        </Grid>\n\n        {/* Stock Chart */}\n        <Grid item xs={12} md={8}>\n          <Paper sx={{ p: 2 }}>\n            {stockData && (\n              <Line options={chartOptions} data={stockData} />\n            )}\n          </Paper>\n        </Grid>\n\n        {/* Recent Trades */}\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 2 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Recent Trades\n            </Typography>\n            <TableContainer>\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Symbol</TableCell>\n                    <TableCell>Type</TableCell>\n                    <TableCell align=\"right\">Quantity</TableCell>\n                    <TableCell align=\"right\">Price</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {recentTrades.map((trade) => (\n                    <TableRow key={trade.id}>\n                      <TableCell>{trade.symbol}</TableCell>\n                      <TableCell>\n                        <Typography \n                          color={trade.type === 'buy' ? 'success.main' : 'error.main'}\n                        >\n                          {trade.type.toUpperCase()}\n                        </Typography>\n                      </TableCell>\n                      <TableCell align=\"right\">{trade.quantity}</TableCell>\n                      <TableCell align=\"right\">${trade.price.toFixed(2)}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}